# Generated by Django 5.0.9 on 2025-10-17 13:36

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('studies', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='study',
            name='analysis_plugin',
            field=models.CharField(default='apps.studies.analysis.placeholder:compute_bf', help_text='Python import path to BF computation function', max_length=500),
        ),
        migrations.AddField(
            model_name='study',
            name='bf_threshold',
            field=models.FloatField(default=10.0, help_text='Bayes Factor threshold for hypothesis support (e.g., BF > 10)', validators=[django.core.validators.MinValueValidator(0.1)]),
        ),
        migrations.AddField(
            model_name='study',
            name='current_bf',
            field=models.FloatField(blank=True, help_text='Current Bayes Factor value', null=True),
        ),
        migrations.AddField(
            model_name='study',
            name='irb_expiration',
            field=models.DateField(blank=True, help_text='IRB approval expiration date', null=True),
        ),
        migrations.AddField(
            model_name='study',
            name='irb_number',
            field=models.CharField(blank=True, help_text='IRB protocol number', max_length=100),
        ),
        migrations.AddField(
            model_name='study',
            name='irb_status',
            field=models.CharField(choices=[('not_required', 'Not Required'), ('approved', 'Approved'), ('exempt', 'Exempt'), ('pending', 'Pending'), ('expired', 'Expired')], default='not_required', help_text='IRB approval status', max_length=20),
        ),
        migrations.AddField(
            model_name='study',
            name='min_sample_size',
            field=models.IntegerField(default=20, help_text='Minimum N before Bayesian monitoring begins', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='study',
            name='monitoring_enabled',
            field=models.BooleanField(default=False, help_text='Enable sequential Bayesian monitoring'),
        ),
        migrations.AddField(
            model_name='study',
            name='monitoring_notified',
            field=models.BooleanField(default=False, help_text='Notification sent when BF >= threshold'),
        ),
        migrations.AddField(
            model_name='study',
            name='osf_enabled',
            field=models.BooleanField(default=False, help_text='Project is on Open Science Framework'),
        ),
        migrations.AddField(
            model_name='study',
            name='osf_link',
            field=models.URLField(blank=True, help_text='Full OSF project URL'),
        ),
        migrations.AddField(
            model_name='study',
            name='osf_project_id',
            field=models.CharField(blank=True, help_text='OSF project identifier', max_length=100),
        ),
        migrations.AddField(
            model_name='study',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly identifier', max_length=300, unique=True),
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Anonymous session identifier')),
                ('payload', models.JSONField(help_text='JSON data submitted from protocol')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Participant IP (optional)', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser user agent string')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='studies.study')),
            ],
            options={
                'verbose_name': 'Protocol Response',
                'verbose_name_plural': 'Protocol Responses',
                'db_table': 'responses',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['study', 'created_at'], name='responses_study_i_54d5a5_idx'), models.Index(fields=['session_id'], name='responses_session_78ca7b_idx')],
            },
        ),
    ]
